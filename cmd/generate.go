// Code generated by cli-generator; DO NOT EDIT.
package cmd



import (
	
	handler "github.com/olegsu/openc-cli/pkg/generate"
	
	"github.com/spf13/cobra"
)

var generateCmdOptions struct {
	name string
	
}

var generateCmd = &cobra.Command{
	Use:     "generate",
	Args: func (cmd *cobra.Command, args []string) error {
		var validators []func(cmd *cobra.Command, args []string) error
		validators = append(validators, cobra.ExactArgs(1))
		for _, v := range validators {
			if err := v(cmd, args); err != nil {
				return err
			}
		}
		return nil
	},

	RunE: func(cmd *cobra.Command, args []string) error {
		h := &handler.Handler{}
		return h.Handle(cnf)
	},
	Long: "Generate boilarplate for openc pipelines",
	PreRun: func(cmd *cobra.Command, args []string) {
		cnf.Set("spec", args )
		rootCmd.PreRun(cmd, args)
		
		cnf.Set("name", generateCmdOptions.name)
		
	},
}




func init() {
	cnf.BindEnv("name", "PIPELINE_NAME")

	generateCmd.PersistentFlags().StringVar(&generateCmdOptions.name, "name", cnf.GetString("name"), " [$PIPELINE_NAME]")
	rootCmd.AddCommand(generateCmd)
}